@model ProductViewModel


@{

    ViewData["Title"] = "Dodaj produkt";
}
<style>
    .alert {
        padding: 20px;
        background-color: red;
        color: white;
    }

    .closebtn {
        margin-left: 15px;
        color: white;
        font-weight: bold;
        float: right;
        font-size: 22px;
        line-height: 20px;
        cursor: pointer;
        transition: 0.3s;
    }

        .closebtn:hover {
            color: black;
        }
</style>
@if (@ViewBag.not == true)
{

<div class="alert">
    <span class="closebtn" onclick="">&times;</span>
    <strong>Błąd! </strong> Podana nazwa produktu już istnieje
</div>
}
<a casp-area="" class="btn btn-secondary" asp-controller="Product" asp-action="NavigationOfProducts"> <- Powrót do listy produktów </a>
<br />
<br />

@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal" form asp-controller="Product" asp-action="AddProduct">
        <h4>Produkt</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })*@
            Nazwa produktu:
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-4" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            Kcal (100):
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kcal, new { htmlAttributes = new { @class = "form-control col-md-4" } })
                @Html.ValidationMessageFor(model => model.Kcal, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            Jednostka:
            @Html.DropDownListFor(model => model.Unit, new SelectList(Enum.GetValues(typeof(Unit))),
            "Wybierz Jednostkę")
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            Kategoria:
            @Html.DropDownListFor(model => model.Category, new SelectList(Enum.GetValues(typeof(Category))),
            "Wybierz Kategorię")
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-success">Dodaj Produkt</button>
            </div>
        </div>
    </div>
}
<script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
<script type="text/javascript">
    $(".closebtn").click(function () {
        var hiddenBox = $(".alert");
          hiddenBox.hide();
        });</script>